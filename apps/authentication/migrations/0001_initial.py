# Generated by Django 4.2.16 on 2025-10-31 08:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("avatar_url", models.URLField(blank=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Administrator"),
                            ("manager", "Manager"),
                            ("employee", "Employee"),
                            ("technician", "Technician"),
                            ("customer", "Customer"),
                        ],
                        default="employee",
                        max_length=50,
                    ),
                ),
                (
                    "employee_id",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("department", models.CharField(blank=True, max_length=100)),
                ("job_title", models.CharField(blank=True, max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_verified", models.BooleanField(default=False)),
                ("email_verified_at", models.DateTimeField(blank=True, null=True)),
                ("verification_token", models.CharField(blank=True, max_length=255)),
                ("two_factor_enabled", models.BooleanField(default=False)),
                ("two_factor_secret", models.CharField(blank=True, max_length=255)),
                ("password_reset_token", models.CharField(blank=True, max_length=255)),
                ("password_reset_expires", models.DateTimeField(blank=True, null=True)),
                ("otp_code", models.CharField(blank=True, max_length=6)),
                ("otp_expires", models.DateTimeField(blank=True, null=True)),
                (
                    "otp_purpose",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("email_verification", "Email Verification"),
                            ("password_reset", "Password Reset"),
                            ("two_factor", "Two Factor Authentication"),
                        ],
                        max_length=50,
                    ),
                ),
                ("last_login_at", models.DateTimeField(blank=True, null=True)),
                ("password_changed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "default_related_name": "fieldpilot_users",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("address", models.TextField(blank=True)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("state", models.CharField(blank=True, max_length=100)),
                ("zip_code", models.CharField(blank=True, max_length=20)),
                ("country", models.CharField(blank=True, max_length=100)),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=200),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(blank=True, max_length=20),
                ),
                (
                    "emergency_contact_relationship",
                    models.CharField(blank=True, max_length=100),
                ),
                ("hire_date", models.DateField(blank=True, null=True)),
                ("skills", models.JSONField(blank=True, default=list)),
                ("certifications", models.JSONField(blank=True, default=list)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("language", models.CharField(default="en", max_length=10)),
                ("email_notifications", models.BooleanField(default=True)),
                ("sms_notifications", models.BooleanField(default=False)),
                ("push_notifications", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="direct_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
            },
        ),
        migrations.CreateModel(
            name="LoginAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True)),
                ("success", models.BooleanField(default=False)),
                ("failure_reason", models.CharField(blank=True, max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Login Attempt",
                "verbose_name_plural": "Login Attempts",
                "indexes": [
                    models.Index(
                        fields=["email", "created_at"],
                        name="authenticat_email_97b940_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "created_at"],
                        name="authenticat_ip_addr_1dccaa_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="authenticat_email_d74434_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["role"], name="authenticat_role_7fb088_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["employee_id"], name="authenticat_employe_00f71a_idx"
            ),
        ),
    ]
